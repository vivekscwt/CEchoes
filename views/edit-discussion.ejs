<%- include('common/header') -%>
<!--begin::Content-->
<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
    <!--begin::Toolbar-->
    <div class="toolbar" id="kt_toolbar">
        <!--begin::Container-->
        <div id="kt_toolbar_container" class="container-fluid d-flex flex-stack">
        <!--begin::Page title-->
        <div data-kt-swapper="true" data-kt-swapper-mode="prepend" data-kt-swapper-parent="{default: '#kt_content_container', 'lg' : '#kt_toolbar_container'}" class="page-title d-flex align-items-center flex-wrap me-3 mb-5 mb-lg-0">
            <!--begin::Title-->
            <h1 class="d-flex align-items-center text-dark fw-bolder fs-3 my-1">
                Discussion
                <!--end::Description-->
            </h1>
            <!--end::Title-->
        </div>
        <!--end::Page title-->
        </div>
        <!--end::Container-->
    </div>
    <!--end::Toolbar-->
    <!--begin::Post-->
    <div class="post d-flex flex-column-fluid" id="kt_post">
    <!--begin::Container-->
    <div id="kt_content_container" class="container-xxl">
        <!--begin::Basic info-->
        <div class="card mb-5 mb-xl-10">
            <!--begin::Card header-->
            <div class="card-header border-0 cursor-pointer" role="button" data-bs-toggle="collapse" data-bs-target="#kt_account_profile_details" aria-expanded="true" aria-controls="kt_account_profile_details">
                <!--begin::Card title-->
                <div class="card-title m-0">
                    <h3 class="fw-bolder m-0">Edit Discussion</h3>
                </div>
                <!--end::Card title-->
            </div>
            <!--begin::Card header-->
            <!--begin::Content-->
            <div id="kt_account_profile_details" class="collapse show">
                <!--begin::Form-->
                <form id="kt_review_tag_update_form" class="form" action="" method="POST">
                    <!--begin::Card body-->
                    <div class="card-body border-top p-9" id="form_body">
                        <!--begin::Input group-->
                        <div class="row mb-6">
                            <!--begin::Label-->
                            <label class="col-lg-4 col-form-label fw-bold fs-6">
                                <span class="required">Content</span>
                            </label>
                            <!--end::Label-->
                            <!--begin::Col-->
                            <div class="col-lg-8 fv-row">
                                <textarea name="content" rows="8" class="form-control form-control-lg form-control-solid" placeholder="Discussion Content" <% if(currentUserData.user_type_id == 3){ %> readonly <% } %> ><% if(DiscussionDetails[0] && DiscussionDetails[0].topic){ %><%= DiscussionDetails[0].topic %><% } %></textarea>
                            </div>
                            <!--end::Col-->
                        </div>
                        <!--begin::Input group-->
                        <div class="row mb-6">
                            <!--begin::Label-->
                            <label class="col-lg-4 col-form-label fw-bold fs-6">
                                <span class="">Tags</span>
                            </label>
                            <!--end::Label-->
                            <!--begin::Col-->
                            <% const tags = JSON.parse(DiscussionDetails[0].tags) %>
                            
                            <div class="col-lg-8 fv-row">
                                <input class="form-control" name="tags" value="<% if(tags.length > 0){ %><% tags.forEach(function(tag) { %><%= tag %>, <% }); %><% } %>" id="kt_rating_tags" <% if(currentUserData.user_type_id == 3){ %>readonly <% } %> />
                            </div>
                            <!--end::Col-->
                        </div>

                        <div class="row mb-6">
                            <!--begin::Label-->
                            <label class="col-lg-4 col-form-label required fw-bold fs-6">Status</label>
                            <!--end::Label-->
                            <!--begin::Col-->
                            <div class="col-lg-8 fv-row">
                                <!--begin::Options-->
                                <div class="d-flex align-items-center mt-3">
                                    <!--begin::Option-->
                                    <label class="form-check form-check-inline form-check-solid me-5">
                                        <input class="form-check-input mt-1" name="discussion_status" type="radio" value="0" <% if(DiscussionDetails[0].discussion_status == '0'){ %>checked <% } %>/>
                                        <span class="fw-bold fs-6 badge badge-light-warning fw-bolder px-4 py-3">Pending</span>
                                    </label>
                                    <!--end::Option-->
                                    <!--begin::Option-->
                                    <label class="form-check form-check-inline form-check-solid me-5">
                                        <input class="form-check-input mt-1" name="discussion_status" type="radio" value="1" <% if(DiscussionDetails[0].discussion_status == '1'){ %>checked <% } %>/>
                                        <span class="fw-bold fs-6 badge badge-light-success fw-bolder px-4 py-3">Approved</span>
                                    </label>
                                    <!--end::Option-->
                                    <!--begin::Option-->
                                    <label class="form-check form-check-inline form-check-solid">
                                        <input class="form-check-input mt-1" name="discussion_status" type="radio" value="2" <% if(DiscussionDetails[0].discussion_status == '2'){ %>checked <% } %> />
                                        <span class="fw-bold fs-6 badge badge-light-danger fw-bolder px-4 py-3">Rejected</span>
                                    </label>
                                    <!--end::Option-->
                                </div>
                                <!--end::Options-->
                            </div>
                            <!--end::Col-->
                        </div>

                        
                        <% const coments = JSON.parse(DiscussionDetails[0].commentData) %>
                        <% if(coments.length > 0) { %> 
                        <div class="row mb-6">
                            <!--begin::Label-->
                            <label class="col-lg-4 col-form-label fw-bold fs-6">
                                <span class="">Comment(s)</span>
                            </label>
                            <!--end::Label-->
                            <!--begin::Col-->
                            <div class="col-lg-8 fv-row">
                                <% coments.forEach(coment => { %>
                                    <div class="row comment-container" id="comment_<%= coment.id %>">
                                        <div class="col-lg-12 fv-row">
                                            <input type="hidden" name="comment_id[]" value="<%= coment.id %>">
                                            <textarea id="comment_text_<%= coment.id %>" name="coment" class="form-control form-control-lg form-control-solid" placeholder="Discussion Content"readonly>
                                                <%= coment.comment %>
                                            </textarea>
                                            <div class="mt-3">
                                                <div class="mt-3">
                                                    <label class="form-check form-check-inline">
                                                        <input class="form-check-input edit-comment" type="radio" name="action_<%= coment.id %>" value="edit" data-comment-id="<%= coment.id %>">
                                                        <span class="fw-bold fs-6 badge badge-light-primary fw-bolder px-4 py-3">Edit</span>
                                                    </label>
                                                    <label class="form-check form-check-inline">
                                                        <input class="form-check-input delete-comment" type="radio" name="comment_content_<%= coment.id %>" data-comment-id="<%= coment.id %>">
                                                        <span class="fw-bold fs-6 badge badge-light-danger fw-bolder px-4 py-3">Delete</span>
                                                    </label>
                                                </div>
                                                <label class="form-check form-check-inline">
                                                    <input class="form-check-input" type="radio" name="comment_status_<%= coment.id %>" value="0" <% if (coment.comment_status === '0') { %>checked<% } %>>
                                                    <span class="fw-bold fs-6 badge badge-light-warning fw-bolder px-4 py-3">Pending</span>
                                                </label>
                                                <label class="form-check form-check-inline">
                                                    <input class="form-check-input" type="radio" name="comment_status_<%= coment.id %>" value="1" <% if (coment.comment_status === '1') { %>checked<% } %>>
                                                    <span class="fw-bold fs-6 badge badge-light-success fw-bolder px-4 py-3">Approved</span>
                                                </label>
                                                <label class="form-check form-check-inline">
                                                    <input class="form-check-input" type="radio" name="comment_status_<%= coment.id %>" value="2" <% if (coment.comment_status === '2') { %>checked<% } %>>
                                                    <span class="fw-bold fs-6 badge badge-light-danger fw-bolder px-4 py-3">Rejected</span>
                                                </label>
                                                <button class="btn btn-primary mt-2 save-comment" data-comment-id="<%= coment.id %>" style="display: none;">Save</button>
                                            </div>
                                        </div>
                                        
                                    </div><br>
                                <% }) %>
                            </div>
                            
                            <!--end::Col-->
                        </div>
                        <% } %>
                        
                        

                    </div>
                    <!--end::Card body-->
                    <!--begin::Actions-->
                    <div class="card-footer d-flex justify-content-end py-6 px-9">
                        <% if (currentUserData && currentUserData.email != admin_email) { %>
                            <div class="survey-head" style="text-align: center;">
                                <strong>Apologies, the URL provided does not match with your account. Please make sure you are using the correct link associated with your account to access the survey.</strong>
                            </div>
                        <% } %>
                        <button type="reset" class="btn btn-light btn-active-light-primary me-2">Discard</button>
                        <input type="hidden" name="discussion_id" value="<%= DiscussionDetails[0].id %>">
                        <button type="submit" class="btn btn-primary" id="kt_review_tag_update_form_submit">Submit</button>
                    </div>
                    <!--end::Actions-->
                </form>
                <!--end::Form-->
            </div>
            <!--end::Content-->
        </div>
        <!--end::Basic info-->
    </div>
    <!--end::Container-->
    </div>
    <!--end::Post-->
</div>
<!--end::Content-->
<%- include('common/footer') -%>
<style>
    .symbol-label {
        box-shadow: 0px 4px 14px 0px rgba(0, 0, 0, 0.25);
    }
    .form-check-inline .form-check-input[type="radio"] {
    width: 20px;
    height: 20px; 
    margin-right: 5px;
    margin-top: 2.5px;
}


</style>
<script>
    var rating_tags = document.querySelector("#kt_rating_tags");
    console.log("rating_tags",rating_tags);
    
    new Tagify(rating_tags);
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
        var __webpack_exports__ = {};
        /*!*********************************************************************************************!*\
            !*** ../../../themes/metronic/html/demo1/src/js/custom/account/settings/profile-details.js ***!
            \*********************************************************************************************/


        // Class definition
        var KTAccountSettingsProfileDetails = function () {
            // Private variables
            var form;
            var submitButton;
            var validation;


            var handleForm = function () {

                validation = FormValidation.formValidation(
                    form,
                    {
                        fields: {
                            'coment': {
                                validators: {
                                    notEmpty: {
                                        message: 'Coment is required'
                                    }
                                }
                            },
                            'review_content': {
                                validators: {
                                    notEmpty: {
                                        message: 'Content is required'
                                    }
                                }
                            }

                        },
                        plugins: {
                            trigger: new FormValidation.plugins.Trigger(),
                            submitButton: new FormValidation.plugins.SubmitButton(),
                            //defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation
                            bootstrap: new FormValidation.plugins.Bootstrap5({
                                rowSelector: '.fv-row',
                                eleInvalidClass: '',
                                eleValidClass: ''
                            })
                        }
                    }
                );


                submitButton.addEventListener('click', function (e) {
                    e.preventDefault();

                    validation.validate().then(function (status) {
                        if (status == 'Valid') {
                            const rejectVal = $('#rejectId').val();
                            console.log(rejectVal);

                            const jsonData = {};

                            $('input[name^="comment_status_"]').each(function () {
                                const commentId = $(this).attr('name').split('_')[2]; 
                                const commentStatus = $(this).val();
                                

                                const commentContent = $('#comment_text_' + commentId).val(); 
                                console.log(`Comment content for ID ${commentId}:`, commentContent); 

                                jsonData['comment_status_' + commentId] = commentStatus;
                                jsonData['comment_content_' + commentId] = commentContent;
                            });

                            $('#kt_review_tag_update_form').serializeArray().filter(item => item.name !== 'coment' && item.name !== 'comment_id[]').forEach(function (field) {
                                jsonData[field.name] = field.value;
                            });

                            $('input[name="comment_id[]"]').each(function () {
                                const commentId = $(this).val(); 
                                const comentValue = $('#comment_text_' + commentId).val(); 
                                jsonData['comment_content_' + commentId] = comentValue;
                            });

                            console.log(jsonData);

                            $.ajax({
                                url: '/auth/editDiscussions',
                                method: 'POST',
                                data: JSON.stringify(jsonData), 
                                contentType: 'application/json',
                                success: function (data) {
                                    if (data.status == 'ok') {
                                        Swal.fire({
                                            text: data.message,
                                            icon: "success",
                                            buttonsStyling: false,
                                            confirmButtonText: "Ok, got it!",
                                            customClass: {
                                                confirmButton: "btn btn-primary"
                                            }
                                        }).then(function (result) {
                                            if (result.isConfirmed) {
                                                window.location.href = "/discussion-listing";
                                            }
                                        });
                                    } else {
                                        Swal.fire({
                                            text: data.message,
                                            icon: "error",
                                            buttonsStyling: false,
                                            confirmButtonText: "Ok, got it!",
                                            customClass: {
                                                confirmButton: "btn btn-primary"
                                            }
                                        });
                                    }
                                },
                                error: function (xhr, status, error) {
                                    console.log(error);
                                }
                            });
                        }

                            else {
                        swal.fire({
                            text: "Sorry, looks like there are some errors detected, please try again.",
                            icon: "error",
                            buttonsStyling: false,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn fw-bold btn-light-primary"
                            }
                        });
                    }

                    });
                });
            }
            return {
                init: function () {
                    form = document.getElementById('kt_review_tag_update_form');
                    submitButton = form.querySelector('#kt_review_tag_update_form_submit');

                    handleForm();
                }
            }
        }();

        // On document ready
        KTUtil.onDOMContentLoaded(function () {
            KTAccountSettingsProfileDetails.init();
        });

    })()
        ;
//# sourceMappingURL=profile-details.js.map  
$(document).ready(function() {
    //$('#reject_textarea').hide();
    $('.deleteComent').on('click', function(){
        //var commentid = $(this).attr("data-comentid");
        //alert(commentid);

        const commentId = $(this).data('commentId');
        const textarea = $(`#comment_text_${commentId}`);
        //const saveButton = $(`.save-comment[data-comment-id="${commentId}"]`);
        const updatedComment = textarea.val();

        console.log("commentId",commentId);
        console.log("textarea",textarea);
        console.log("textarea",textarea);

        Swal.fire({
                    text: "Are you sure you want to delete permanently  ?",
                    icon: "warning",
                    showCancelButton: true,
                    buttonsStyling: false,
                    confirmButtonText: "Yes, delete!",
                    cancelButtonText: "No, cancel",
                    customClass: {
                        confirmButton: "btn fw-bold btn-danger",
                        cancelButton: "btn fw-bold btn-active-light-primary"
                    }
                }).then(function (result) {
                    if (result.value) {
                        $.ajax({
                        //url: '/auth/delete-company', 
                        url: '/auth/delete-comment', 
                        method: 'POST',
                        data: {commentid:commentId},
                        ContentType: 'application/json',
                        success: function (data) {
                            if (data.status == 'ok') {
                                Swal.fire({
                                    text: data.message,
                                    icon: "success",
                                    buttonsStyling: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                }).then(function (result) {
                                    if (result.isConfirmed) {
                                        location.reload();
                                    }
                                });
                            } else {
                                Swal.fire({
                                    text: data.message,
                                    icon: "error",
                                    buttonsStyling: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            // Handle any errors that occur during the request
                            console.log(error);
                        }
                    });
                    } else if (result.dismiss === 'cancel') {
                        Swal.fire({
                            text:  "Comment is not deleted.",
                            icon: "error",
                            buttonsStyling: false,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn fw-bold btn-primary",
                            }
                        });
                    }
                });
       
    })

  });
</script>

<script>
$(document).ready(function () {
    // Handle Edit action
    $('.edit-comment').change(function () {
        const commentId = $(this).data('commentId');
        const textarea = $(`#comment_text_${commentId}`);
        //const saveButton = $(`.save-comment[data-comment-id="${commentId}"]`);
        const updatedComment = textarea.val();

        console.log("commentId",commentId);
        console.log("textarea",textarea);
        console.log("textarea",textarea);
        const saveButton = $(`.save-comment[data-comment-id="${commentId}"]`);

        console.log("commentId",commentId);
        console.log("textarea",textarea);
        console.log("saveButton",saveButton);
        

        if ($(this).is(':checked')) {
            textarea.removeAttr('readonly');
            saveButton.show();
        }
    });

    $('.delete-comment').change(function () {
        const commentId = $(this).data('commentId');
        const textarea = $(`#comment_text_${commentId}`);
        //const saveButton = $(`.save-comment[data-comment-id="${commentId}"]`);
        const updatedComment = textarea.val();

        console.log("commentId",commentId);
        console.log("textarea",textarea);
        console.log("textarea",textarea);
        
        Swal.fire({
                    text: "Are you sure you want to delete permanently  ?",
                    icon: "warning",
                    showCancelButton: true,
                    buttonsStyling: false,
                    confirmButtonText: "Yes, delete!",
                    cancelButtonText: "No, cancel",
                    customClass: {
                        confirmButton: "btn fw-bold btn-danger",
                        cancelButton: "btn fw-bold btn-active-light-primary"
                    }
                }).then(function (result) {
                    if (result.value) {
                        $.ajax({
                        url: '/auth/delete-comment', 
                        method: 'POST',
                        data: {commentid:commentId},
                        ContentType: 'application/json',
                        success: function (data) {
                            if (data.status == 'ok') {
                                Swal.fire({
                                    text: data.message,
                                    icon: "success",
                                    buttonsStyling: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                }).then(function (result) {
                                    if (result.isConfirmed) {
                                        location.reload();
                                    }
                                });
                            } else {
                                Swal.fire({
                                    text: data.message,
                                    icon: "error",
                                    buttonsStyling: false,
                                    confirmButtonText: "Ok, got it!",
                                    customClass: {
                                        confirmButton: "btn btn-primary"
                                    }
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            // Handle any errors that occur during the request
                            console.log(error);
                        }
                    });
                    } else if (result.dismiss === 'cancel') {
                        Swal.fire({
                            text:  "Comment is not deleted.",
                            icon: "error",
                            buttonsStyling: false,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn fw-bold btn-primary",
                            }
                        });
                    }
                });
    
                });
    
    $('.save-comment').click(function () {
        const commentId = $(this).data('commentId');
        const textarea = $(`#comment_text_${commentId}`);
        const updatedComment = textarea.val();

        console.log("commentId",commentId);
        console.log("updatedComment",updatedComment);
        console.log("textarea",textarea);
        

        $.ajax({
            url: '/auth/edit-comment',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                commentId: commentId,
                updatedComment: updatedComment
            }),
            success: function (result) {
                if (result.status === 'ok') {
                    textarea.attr('readonly', 'readonly');
                    $(`.save-comment[data-comment-id="${commentId}"]`).hide();
                    alert('Comment updated successfully');
                } else {
                    alert('Failed to update comment');
                }
            },
            error: function (error) {
                console.error('Error saving comment:', error);
                alert('Failed to update comment');
            }
        });
    });
});

</script>
