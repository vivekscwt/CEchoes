<%- include('common/header') -%>
   <link href="/front-end/css/business-style.css" rel="stylesheet" type="text/css">
   <%- include('common/header-banner') -%>
   <section class="main-content business-choose-your-plan-content" data-aos="fade-up">
   <body>
      <div class="tab_pricelist">
      <div class="container">
      <div class="pricing-tabs">
        <div class="toggle-container">
          <span class="toggle-label" id="monthly-label">Monthly</span>
          <label class="switch">
            <input type="checkbox" id="toggle-switch">
            <span class="slider"></span>
          </label>
          <span class="toggle-label" id="yearly-label">Yearly</span>
        </div>
        <% function hasAnySubscription() { return getSubscribedUsers.some(sub=> sub.user_id ===
          currentUserData.user_id);
          }

          function isSubscribed(planName, duration) {
          return getSubscribedUsers.some(sub => sub.user_id === currentUserData.user_id && sub.plan_name ===
          planName && sub.subscription_duration === duration);
          }

          const userHasSubscription = hasAnySubscription();
          %>

        <div id="monthly" class="tab-content active">
          <% ['basic', 'standard', 'advanced', 'premium', 'enterprise'].forEach(plan => { %>
            <div class="pricing-card">
              <div class="price_tag">
                <% if (country_name === "India") { %>
                  $ <%= getplans[plan + '_val'].monthly_price_local %> <span>/ Month</span>
                <% } else if (country_name === "Japan") { %>
                  $ <%= getplans[plan + '_val'].monthly_price_local %> <span>/ Month</span>
                <% } else { %>
                  $ <%= getplans[plan + '_val'].monthly_price_local %> <span>/ Month</span>
                <% } %>
              </div>
          
              <% if (currentUserData && currentUserData.claimed_comp_id != null) { %>
                <div class="member-control">
                  <label for="<%= plan %>-member-count"></label>
                  <input type="hidden" min="0" name="memberCount" id="<%= plan %>-member-count" value="">
                  <input type="hidden" id="<%= plan %>-per-user-price" value="<%= getplans[plan + '_val'].per_user_price_local %>">
                  
                  <% if (currentUserData) { %>
                    <input type="hidden" name="userId" value="<%= currentUserData.user_id %>">
                    <input type="hidden" name="email" value="<%= currentUserData.email %>">
                  <% } %>
                </div>
          

          
                <%- getplans[plan + '_val' ].description %>
          
                <div class="get_started_btn">
                  <% if (isSubscribed(plan, 'monthly')) { %>
                    <button class="subscribed-btn" disabled>
                      Get Started
                    </button>
                  <% }
                  else if (userHasSubscription) { %>
                    <button class="subscribed-btn">
                       Get Started
                    </button>
                  <% } else { %>
                    <div class="proceed_btn">
                      <a href="#" style="color: black;"  onclick="redirectToStripePayment('<%= getplans[plan + '_val'].name %>', '<%= getplans[plan + '_val'].monthly_price %>', 'monthly')">Get Started</a>
                    </div>
                  <% } %>
                </div>
              <% } else { %>
                <div class="member-control">
                  <label for="<%= plan %>-member-count"></label>
                  <input type="hidden" min="0" name="memberCount" id="<%= plan %>-member-count" value="">
                  <input type="hidden" id="<%= plan %>-per-user-price" value="<%= getplans[plan + '_val'].per_user_price_local %>">
                  
                  <% if (currentUserData) { %>
                    <input type="hidden" name="userId" value="<%= currentUserData.user_id %>">
                    <input type="hidden" name="email" value="<%= currentUserData.email %>">
                  <% } %>
                </div>

          
                <%- getplans[plan + '_val' ].description %>
          
                <div class="get_started_btn">
                  <% if (isSubscribed(plan, 'monthly')) { %>
                    <button class="subscribed-btn" disabled>
                      Get Started
                    </button>
                  <% } else if (userHasSubscription) { %>
                    <button class="subscribed-btn">
                      Get Started
                    </button>
                  <% } else { %>
                    <div class="proceed_btn">
                      <a href="#" style="color: black;" onclick="redirectToSubscriptionPage('<%= getplans[plan + '_val'].name %>', '<%= getplans[plan + '_val'].monthly_price %>', 'monthly')">Get Started</a>
                    </div>
                  <% } %>
                </div>
              <% } %>
            </div>
          <% }) %>
          
        </div>

        <div id="yearly" class="tab-content">
          <% ['basic', 'standard', 'advanced', 'premium', 'enterprise'].forEach(plan => { %>
            <div class="pricing-card">
              
              <div class="price_tag">
                <% if (country_name === "India") { %>
                  $ <%= getplans[plan + '_val'].yearly_price_local %> <span>/ Year</span>
                <% } else if (country_name === "Japan") { %>
                  $ <%= getplans[plan + '_val'].yearly_price_local %> <span>/ Year</span>
                <% } else { %>
                  $ <%= getplans[plan + '_val'].yearly_price_local %> <span>/ Year</span>
                <% } %>
              </div>
              
              <% if (currentUserData && currentUserData.claimed_comp_id != null) { %>

              <%- getplans[plan + '_val' ].description %>

              <div class="get_started_btn">
                <% if (isSubscribed(plan, 'yearly')) { %>
                  <!-- Show the subscribed button and disable it -->
                  <button class="subscribed-btn" disabled>
                    Get Started
                  </button>
                <% } else if (userHasSubscription) { %>
                  <!-- Hide the button for other plans if the user already has a subscription -->
                  <button class="subscribed-btn">
                    Get Started
                  </button>
                <% } else { %>
                  <div class="proceed_btn">
                    <a href="#" style="color: black;" onclick="redirectToYearlyStripePayment('<%= getplans[plan + '_val'].name %>', '<%= getplans[plan + '_val'].yearly_price %>', 'yearly')">Get Started</a>
                  </div>
                <% } %>
              </div>
              <% } else { %>
                <%- getplans[plan + '_val' ].description %>

                <div class="get_started_btn">
                  <% if (isSubscribed(plan, 'yearly')) { %>
                    <label>
                      <input type="radio" id="subscribe-<%= plan %>-yearly" name="subscriptionType" value="yearly" disabled checked>
                      Get Started
                    </label>
                  <% } else if (userHasSubscription) { %>
                    <label>
                      <input type="radio" id="subscribe-<%= plan %>-yearly" name="subscriptionType" value="yearly" disabled>
                      Get Started
                    </label>
                  <% } else { %>
                    <div class="proceed_btn">
                      <a href="#" style="color: black;" onclick="redirectToYearlySubscriptionPage('<%= getplans[plan + '_val'].name %>', '<%= getplans[plan + '_val'].yearly_price %>', 'yearly')">Get Started</a>
                    </div>
                  <% } %>
                </div>
                <% } %>
            </div>
          <% }) %>
        </div>
        
      </div>
    </div>
    </div>

    <% if (getSubscribedUsers.length > 0) { %>
      <p class="medium-large">
        You have already subscribed to the <%= getSubscribedUsers[0].plan_name %> membership plan. Click
        <a href="/user_payment_history %>"> here </a>to view the details.
      </p>
    <% } %>

    
      <!-- BODY STYLE CSS LINK -->
      <link href="responsive.css" rel="stylesheet" type="text/css">
      <!-- BOOTSTRAP CSS LINS -->
      <link href="css/bootstrap.min.css" rel="stylesheet" type="text/css">
      <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.1/css/all.css">
      <link rel="stylesheet" href="https://site-assets.fontawesome.com/releases/v6.5.1/css/sharp-thin.css">
      <!-- JQUERY LINK -->
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
      <!-- BOOTSTRAP JS LINKS -->
      <script src="js/bootstrap.min.js"></script>
   </body>
   </section>

    <%- include('common/footer') -%>

<style>
   * {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

html {
	scroll-behavior: smooth;
	overflow-x: hidden;
}

*:before,
*:after {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

::-moz-selection {
	background-color: #007d9d;
	color: #fff;
	text-shadow: none;
}

::selection {
	background-color: #000000;
	color: #fff;
	text-shadow: none;
}

:root {
	--theme-color: #000;
	--theme-color-second: #000;
}

body {
	margin: 0;
	padding: 0;
	font-size: 16px;
	outline: none;
	overflow: hidden;
	box-sizing: border-box;
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	scroll-behavior: smooth;
}

@font-face {
	font-family: myFirstFont;
	src: url();
}

h1,
h2,
h3,
h4,
h5,
h6,
ul,
li,
figure {
	margin: 0;
	padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	margin-bottom: 20px;
}

p {
	margin: 0;
	font-size: 16px;
	line-height: 27px;
	margin-bottom: 20px;
	font-weight: 400;
}

ul {
	list-style: none;
	padding: 0;
}

img {
	margin: 0;
	padding: 0;
	border: none;
	max-width: 100%;
	height: auto !important;
	display: block;
}


a,
button,
input {
	-webkit-transition: all 0.3s ease-in-out;
	-o-transition: all 0.3s ease-in-out;
	-moz-transition: all 0.3s ease-in-out;
	transition: all 0.3s ease-in-out;
}

a {
	text-decoration: none;
}


/* DEFAULT CSS SETTING END */

/* Pricing Tabs Container */
/* Toggle Switch */
.tab_pricelist .toggle-container {
	display: flex;
	align-items: center;
	justify-content: center;
	border: 2px solid #FCCB06;
	border-radius: 10px;
	padding: 20px 10px;
	max-width: 450px;
	margin: 20px auto;
	background-color: #fff;
}

.tab_pricelist .toggle-label {
	font-size: 24px;
	color: #000000;
	margin-right: 10px;
}

.toggle-container .toggle-label.active{
	color: #FCCB06 !important;
}


.tab_pricelist #yearly-label {
	color: #000;
	margin-left: 10px;
}

.tab_pricelist .discount {
    background-color: #FCCB06;
    color: #000000;
    padding: 8px 10px;
    border-radius: 5px;
    font-size: 14px;
    margin-left: 5px;
    font-weight: 500;
}

.tab_pricelist .switch {
	position: relative;
	display: inline-block;
	width: 65px;
	height: 35px;
}

.tab_pricelist .switch input {
	opacity: 0;
	width: 0;
	height: 0;
}

.tab_pricelist .slider {
	position: absolute;
	cursor: pointer;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: #FCCB06;
	transition: .4s;
	border-radius: 34px;
}

.tab_pricelist .slider:before {
	position: absolute;
	content: "";
	height: 30px;
	width: 30px;
	left: 4px;
	bottom: 2px;
	background-color: white;
	transition: .4s;
	border-radius: 50%;
}

.tab_pricelist input:checked+.slider {
	background-color: #FCCB06;
}

.tab_pricelist input:checked+.slider:before {
	transform: translateX(26px);
}

.tab_pricelist input:checked~#monthly-label {
	color: #000;
}

.tab_pricelist input:checked~#yearly-label {
	color: #007bff;
}

/* Pricing Cards */
.tab_pricelist .tab-content {
	display: none;
}

.tab_pricelist .tab-content.active {
	display: grid;
	grid-template-columns: repeat(5, 1fr);
	grid-gap: 15px;
	margin-top: 20px;
}

.tab_pricelist .pricing-card {
    background: #252525;
    border-radius: 20px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    padding: 30px 20px;
    width: 100%;
    margin-bottom: 20px;
}

.tab_pricelist .price_tag {
    font-size: 26px;
    color: #fff;
}
.tab_pricelist .price_tag  span{
	font-size: 14px;
}


.tab_pricelist .pricing-card h4{
	color: #FCCB06;
	font-size: 22px;
	font-weight: 700;
	line-height: 110.4%;
	transition: all ease-in-out 0.5s;
}


.tab_pricelist .pricing-card ul {
	list-style-type: none;
	padding: 0;
	margin: 20px ;
}

.tab_pricelist .pricing-card ul li {
	margin-bottom: 10px;
	font-size: 16px;
	color: #ffffff;
	list-style: disc;
}

.tab_pricelist .get_started_btn{
	margin-top: 30px;
}

.tab_pricelist .proceed_btn{
	background-color: #FCCB06;
	color: #000000;
	padding: 14px 30px;
	width: 100%;
	border-radius: 6px;
	text-transform: capitalize;
	transition: 0.3s ease-in-out;
}

.tab_pricelist .proceed_btn:hover{
	color: #000;
	background-color: #fff;
}
.proceed_btn.proceed-invisible-btn a {
    display: block;
    width: 100%;
    text-align: center;
}
.subscribed-btn {
  background-color: #FCCB06;
  color: #000000;
  height: 50px; 
  width: 100%;
  border-radius: 6px;
  text-transform: capitalize;
  transition: 0.3s ease-in-out;
  border: none;
  cursor: not-allowed;
}
.proceed_btn.proceed-invisible-btn a {
    display: block;
    width: 100%;
    text-align: center;
}
.medium-large {
    font-size: 1.25em; 
    font-weight: bold; 
    text-align: center;
  }


/* MEDIA QUERY RESPONSIVE STRAT */

@media only screen and (max-width:1299px) {
    .tab_pricelist .tab-content.active {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-gap: 15px;
        margin-top: 20px;
    }
}

@media only screen and (max-width:1199px) {
    .tab_pricelist .tab-content.active {
        grid-template-columns: repeat(3, 1fr);
    }
}

@media only screen and (max-width:991px) {
    .tab_pricelist .tab-content.active {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media only screen and (max-width:575px) {
    .tab_pricelist .tab-content.active {
        grid-template-columns: repeat(1, 1fr);
    }
    .tab_pricelist .toggle-label {
        font-size: 18px;
        color: #000000;
        margin-right: 10px;
    }
    .tab_pricelist .switch {
        width: 45px;
        height: 22px;
    }
    .tab_pricelist .slider:before {
        height: 16px;
        width: 16px;
        left: 2px;
        bottom: 3px;
    }
    .tab_pricelist .discount {
        padding: 5px 6px;
        font-size: 12px;
    }
    
}

/* MEDIA QUERY RESPONSIVE END */
</style>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://js.stripe.com/v3/"></script>

    <script>
    const toggleSwitch = document.getElementById('toggle-switch');
    const monthlyTab = document.getElementById('monthly');
    const yearlyTab = document.getElementById('yearly');
    const monthlyLabel = document.getElementById('monthly-label');
    const yearlyLabel = document.getElementById('yearly-label');
    
    // Initialize by making the Monthly tab and label active
    window.onload = function() {
      monthlyTab.classList.add('active'); // Show monthly tab content
      yearlyTab.classList.remove('active'); // Hide yearly tab content
      monthlyLabel.classList.add('active'); // Highlight the monthly label
      yearlyLabel.classList.remove('active'); // Remove highlight from yearly label
      toggleSwitch.checked = false; // Ensure toggle is off (Monthly view)
    };
    
    // Event listener for toggle switch
    toggleSwitch.addEventListener('change', function() {
      if (this.checked) {
        // Show yearly pricing and apply active class to Yearly label
        monthlyTab.classList.remove('active');
        yearlyTab.classList.add('active');
        monthlyLabel.classList.remove('active');
        yearlyLabel.classList.add('active');
      } else {
        // Show monthly pricing and apply active class to Monthly label
        yearlyTab.classList.remove('active');
        monthlyTab.classList.add('active');
        yearlyLabel.classList.remove('active');
        monthlyLabel.classList.add('active');
      }
    });
    </script>



<script>
  let userCountry = '<%= country_name %>';
  console.log('userCountry:', userCountry);
  let encryptedemail = '<%= encryptedEmail%>';
  //console.log("encryptedemail",encryptedemail);

  document.querySelectorAll('.choose-your-plan-box-step').forEach(step => {
     const planId = step.querySelector('input[name="memberCount"]').id.split('-')[0];

     const memberCountInput = step.querySelector(`#${planId}-member-count`);
     const monthlyTotalPriceSpan = step.querySelector(`#${planId}-total-monthly-price`);
     const yearlyTotalPriceSpan = step.querySelector(`#${planId}-total-yearly-price`);
     const perUserPrice = parseFloat(step.querySelector(`#${planId}-per-user-price`).value);

     const initialMonthlySubscriptionPrice = parseFloat(monthlyTotalPriceSpan.textContent);
     const initialYearlySubscriptionPrice = parseFloat(yearlyTotalPriceSpan.textContent);

     memberCountInput.addEventListener('input', function () {
        const memberCount = parseInt(memberCountInput.value) || 0;


        const newMonthlyTotalPrice = initialMonthlySubscriptionPrice + (perUserPrice * memberCount);
        const newYearlyTotalPrice = initialYearlySubscriptionPrice + (perUserPrice * memberCount);

        monthlyTotalPriceSpan.textContent = newMonthlyTotalPrice.toFixed(2);
        yearlyTotalPriceSpan.textContent = newYearlyTotalPrice.toFixed(2);

        console.log('New Monthly Total Price:', monthlyTotalPriceSpan.textContent);
        console.log('New Yearly Total Price:', yearlyTotalPriceSpan.textContent);
     });
  });


  function redirectToStripePayment(planId, planPrice, billingCycle) {
     const memberCount = document.getElementById(`${planId}-member-count`).value || 0;
     const perUserPriceElement = document.getElementById(`${planId}-per-user-price`);
     const perUserPrice = perUserPriceElement ? parseFloat(perUserPriceElement.value) : null;

     const monthlyTotalPriceSpan = document.getElementById(`${planId}-total-monthly-price`);
     const yearlyTotalPriceSpan = document.getElementById(`${planId}-total-yearly-price`);

     console.log("monthlyTotalPriceSpan", monthlyTotalPriceSpan);
     console.log("yearlyTotalPriceSpan", yearlyTotalPriceSpan);

     const updatedMonthlyTotalPrice = monthlyTotalPriceSpan ? parseFloat(monthlyTotalPriceSpan.textContent) : parseFloat(planPrice);
     const updatedYearlyTotalPrice = yearlyTotalPriceSpan ? parseFloat(yearlyTotalPriceSpan.textContent) : parseFloat(planPrice);


     console.log("updatedMonthlyTotalPrice", updatedMonthlyTotalPrice);
     console.log("updatedYearlyTotalPrice", updatedYearlyTotalPrice);

     let total_price;
     if (perUserPrice) {
        total_price = updatedMonthlyTotalPrice;
     } else {
        total_price = updatedMonthlyTotalPrice;
     }



     console.log("memberCount", memberCount);
     console.log("total_price", total_price);



     // const redirectURL = `/stripe-payment?planId=${encodeURIComponent(planId)}&planPrice=${encodeURIComponent(planPrice)}&billingCycle=${encodeURIComponent(billingCycle)}&memberCount=${encodeURIComponent(memberCount)}&total_price=${encodeURIComponent(total_price.toFixed(2))}`;
     const redirectURL = `/stripe-payment?planId=${encodeURIComponent(planId)}&planPrice=${encodeURIComponent(planPrice)}&billingCycle=${encodeURIComponent(billingCycle)}&memberCount=${encodeURIComponent(memberCount)}&total_price=${encodeURIComponent(total_price.toFixed(2))}&encryptedEmail=${encodeURIComponent(encryptedemail)}`;

     window.location.href = redirectURL;
  }

  function redirectToYearlyStripePayment(planId, planPrice, billingCycle) {
     const memberCount = document.getElementById(`${planId}-member-count`).value || 0;
     const perUserPriceElement = document.getElementById(`${planId}-per-user-price`);
     const perUserPrice = perUserPriceElement ? parseFloat(perUserPriceElement.value) : null;

     const monthlyTotalPriceSpan = document.getElementById(`${planId}-total-monthly-price`);
     const yearlyTotalPriceSpan = document.getElementById(`${planId}-total-yearly-price`);

     console.log("monthlyTotalPriceSpan", monthlyTotalPriceSpan);
     console.log("yearlyTotalPriceSpan", yearlyTotalPriceSpan);

     const updatedMonthlyTotalPrice = monthlyTotalPriceSpan ? parseFloat(monthlyTotalPriceSpan.textContent) : parseFloat(planPrice);
     const updatedYearlyTotalPrice = yearlyTotalPriceSpan ? parseFloat(yearlyTotalPriceSpan.textContent) : parseFloat(planPrice);


     console.log("updatedMonthlyTotalPrice", updatedMonthlyTotalPrice);
     console.log("updatedYearlyTotalPrice", updatedYearlyTotalPrice);


     let total_price;
     if (perUserPrice) {
        total_price = updatedYearlyTotalPrice;
     } else {
        total_price = updatedYearlyTotalPrice;
     }

     console.log("memberCount", memberCount);
     console.log("total_price", total_price);

     const redirectURL = `/stripe-year-payment?planId=${encodeURIComponent(planId)}&planPrice=${encodeURIComponent(planPrice)}&billingCycle=${encodeURIComponent(billingCycle)}&memberCount=${encodeURIComponent(memberCount)}&total_price=${encodeURIComponent(total_price.toFixed(2))}&encryptedEmail=${encodeURIComponent(encryptedemail)}`;

     window.location.href = redirectURL;
  }

  function redirectToLogin() {
     window.location.href = '/';
  }

  function redirectToSubscriptionPage(planId, planPrice, billingCycle, memberCount, totalPrice) {
     const memberCountValue = document.getElementById(`${planId}-member-count`).value || 0;
     const perUserPriceElement = document.getElementById(`${planId}-per-user-price`);
     const perUserPrice = perUserPriceElement ? parseFloat(perUserPriceElement.value) : null;

     const monthlyTotalPriceSpan = document.getElementById(`${planId}-total-monthly-price`);
     const yearlyTotalPriceSpan = document.getElementById(`${planId}-total-yearly-price`);

     const updatedMonthlyTotalPrice = monthlyTotalPriceSpan ? parseFloat(monthlyTotalPriceSpan.textContent) : parseFloat(planPrice);
     const updatedYearlyTotalPrice = yearlyTotalPriceSpan ? parseFloat(yearlyTotalPriceSpan.textContent) : parseFloat(planPrice);

     let total_price;
     if (perUserPrice) {
        total_price = updatedMonthlyTotalPrice;
     } else {
        total_price = updatedMonthlyTotalPrice;
     }

     const redirectURL = `/create-user-company-subscription?planName=${encodeURIComponent(planId)}&monthlyPrice=${encodeURIComponent(planPrice)}&subscriptionType=${encodeURIComponent(billingCycle)}&memberCount=${encodeURIComponent(memberCountValue)}&total_price=${encodeURIComponent(total_price.toFixed(2))}`;

     window.location.href = redirectURL;
  }


  // function redirectToyearlySubscriptionPage(planId, planPrice, billingCycle, memberCount, totalPrice) {
  //    const memberCountValue = document.getElementById(`${planId}-member-count`).value || 0;
  //    const perUserPriceElement = document.getElementById(`${planId}-per-user-price`);
  //    const perUserPrice = perUserPriceElement ? parseFloat(perUserPriceElement.value) : null;

  //    const monthlyTotalPriceSpan = document.getElementById(`${planId}-total-monthly-price`);
  //    const yearlyTotalPriceSpan = document.getElementById(`${planId}-total-yearly-price`);

  //    console.log("monthlyTotalPriceSpan", monthlyTotalPriceSpan);
  //    console.log("yearlyTotalPriceSpan", yearlyTotalPriceSpan);

  //    const updatedMonthlyTotalPrice = monthlyTotalPriceSpan ? parseFloat(monthlyTotalPriceSpan.textContent) : parseFloat(planPrice);
  //    const updatedYearlyTotalPrice = yearlyTotalPriceSpan ? parseFloat(yearlyTotalPriceSpan.textContent) : parseFloat(planPrice);


  //    console.log("updatedMonthlyTotalPrice", updatedMonthlyTotalPrice);
  //    console.log("updatedYearlyTotalPrice", updatedYearlyTotalPrice);


  //    let total_price;
  //    if (perUserPrice) {
  //       total_price = updatedYearlyTotalPrice;
  //    } else {
  //       total_price = updatedYearlyTotalPrice;
  //    }

  //    console.log("memberCount", memberCount);
  //    console.log("total_price", total_price);
  //    const redirectURL = `/create-user-company-subscription?planName=${encodeURIComponent(planId)}&monthlyPrice=${encodeURIComponent(planPrice)}&subscriptionType=${encodeURIComponent(billingCycle)}&memberCount=${encodeURIComponent(memberCountValue)}&total_price=${encodeURIComponent(total_price.toFixed(2))}`;

  //    window.location.href = redirectURL;
  //    }

  function redirectToYearlySubscriptionPage(planId, planPrice, billingCycle) {
     const memberCountValue = document.getElementById(`${planId}-member-count`).value || 0;
     const perUserPriceElement = document.getElementById(`${planId}-per-user-price`);
     const perUserPrice = perUserPriceElement ? parseFloat(perUserPriceElement.value) : null;

     const monthlyTotalPriceSpan = document.getElementById(`${planId}-total-monthly-price`);
     const yearlyTotalPriceSpan = document.getElementById(`${planId}-total-yearly-price`);

     console.log("monthlyTotalPriceSpan", monthlyTotalPriceSpan);
     console.log("yearlyTotalPriceSpan", yearlyTotalPriceSpan);

     const updatedMonthlyTotalPrice = monthlyTotalPriceSpan ? parseFloat(monthlyTotalPriceSpan.textContent) : parseFloat(planPrice);
     const updatedYearlyTotalPrice = yearlyTotalPriceSpan ? parseFloat(yearlyTotalPriceSpan.textContent) : parseFloat(planPrice);

     console.log("updatedMonthlyTotalPrice", updatedMonthlyTotalPrice);
     console.log("updatedYearlyTotalPrice", updatedYearlyTotalPrice);

     let total_price;
     if (perUserPrice) {
        total_price = updatedYearlyTotalPrice;
     } else {
        total_price = updatedYearlyTotalPrice;
     }

     console.log("memberCount", memberCountValue);
     console.log("total_price", total_price);
     const redirectURL = `/create-user-company-subscription?planName=${encodeURIComponent(planId)}&monthlyPrice=${encodeURIComponent(planPrice)}&subscriptionType=${encodeURIComponent(billingCycle)}&memberCount=${encodeURIComponent(memberCountValue)}&total_price=${encodeURIComponent(total_price.toFixed(2))}`;

     window.location.href = redirectURL;
  }


</script>
<script>
  document.addEventListener("DOMContentLoaded", async function () {
     console.log("DOM content loaded");

     try {
        const { countryName, countryCode } = await fetchGeolocationAndSetCountryInfo();
        console.log("Initial CountryName:", countryName);
        console.log("Initial CountryCode:", countryCode);

        const countryDropdown = document.querySelector('.country-dropdown');
        if (countryCode == 'UK') {
           countryDropdown.value = 'UK';
        } else if (countryCode == 'JP') {
           countryDropdown.value = 'JP';
        } else {
           countryDropdown.value = 'US';
        }
        // updateCountryInfo(countryName, countryCode);
        // setDefaultLanguage(countryName);
        countryDropdown.addEventListener('change', function (event) {
           const selectedCountryCode = event.target.value;
           const selectedCountryName = event.target.options[event.target.selectedIndex].text;
           console.log("Selected country code:", selectedCountryCode);
           console.log("Selected country name:", selectedCountryName);

          //  const redirectUrl = `/${selectedCountryCode}/business`;
          const redirectUrl = `/staging-business/${selectedCountryCode}`;
           window.location.href = redirectUrl;
        });
     } catch (error) {
        console.error('Error initializing country info:', error);
     }
  });
</script>

<script>
$(document).ready(function() {
function toggleProceedButton(plan, type) {
// Determine IDs for the proceed button and total price display based on plan and type
const proceedBtnId = `proceed-btn-${plan}-${type}`;
const totalPriceDisplayId = `total-${type}-price-${plan}`;

// Select the proceed button and total price display for the given plan and type
const $proceedBtn = $(`#${proceedBtnId}`);
const $totalPriceDisplay = $(`#${totalPriceDisplayId}`);

// Show the proceed button and total price display for the selected plan and type
$proceedBtn.removeClass('proceed-invisible-btn').addClass('proceed-visible-btn');
$totalPriceDisplay.show(); // Show total price display

// Hide the proceed button and total price display for other plans and types
$('.proceed_btn').not(`#${proceedBtnId}`).each(function() {
  $(this).removeClass('proceed-visible-btn').addClass('proceed-invisible-btn');
});

$('.total-price-display').not(`#${totalPriceDisplayId}`).each(function() {
  $(this).hide(); // Hide total price display for other plans
});
}

// Attach click event handlers to radio buttons
$('input[name="subscriptionType"]').on('click', function() {
const idParts = $(this).attr('id').split('-'); // Split ID to get plan and type
const plan = idParts[1];
const type = idParts[2]; // 'monthly' or 'yearly'
toggleProceedButton(plan, type);
});

// Initial setup to hide proceed buttons and prices on page load
$('.proceed_btn').addClass('proceed-invisible-btn');
$('.total-price-display').hide();
});

</script>