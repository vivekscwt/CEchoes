<%- include('common/header') -%>
<link href="/front-end/css/myprofile-style.css" rel="stylesheet" type="text/css">
<%- include('common/header-banner') -%>

<!-- ============== Section1 Start =============== -->
<section class="main-content my-profile-content">
  <div class="container">
     <div class="my-profile-wrapper">
        <div class="row">
          <%- include('common/profile-sidebar') -%>
          <div class="col-md-8">
            <div class="profile-right-content">
              <div class="profile-info-table">
                <% let hasPayments = false; %> <!-- Track if any payments exist -->
                <% Object.keys(allPayments).forEach(planName => { %>
                    <% if (allPayments[planName].length > 0) { %>
                        <h2>Plan: <%= planName %> </h2>
                        <table>
                            <% const planPayments = allPayments[planName]; %>
                            <% 
                            planPayments.sort((a, b) => new Date(a.subscription_start_date) - new Date(b.subscription_start_date)); 
                            const firstPaymentDate = new Date(planPayments[0].subscription_start_date); 
                            %>
                            <tr>
                                <td colspan="4">Payment: <%= firstPaymentDate.toLocaleDateString() %></td>
                            </tr>
                            
                            <% planPayments.forEach(payment => { %>
                            <tr>
                                <td><%= new Date(payment.subscription_start_date).toLocaleDateString() %></td>
                                <td><%= payment.payment_status %></td>
                            </tr>
                            <% }); %>
            
                            <% 
                            const latestSubscriptionEndDate = new Date(Math.max(...planPayments.map(payment => new Date(payment.subscription_end_date)))); 
                            const nextPaymentDate = new Date(latestSubscriptionEndDate);
                            nextPaymentDate.setDate(nextPaymentDate.getDate()); 
                            %>
                            <tr>
                                <td colspan="3">Next Payment Date</td>
                                <td><%= nextPaymentDate.toLocaleDateString() %></td>
                            </tr>
                        </table>
                        <div>
                            <button type="button" class="formbold-confirm-btn cancel-subscription-btn" onclick="confirmCancelSubscription()">Cancel Subscription</button>
                            <button onclick="window.location.href='/update-plan'" class="formbold-confirm-btn update-subscription-btn">Update Subscription</button>


                        </div>
                        <% hasPayments = true; %> 
                    <% } %>
                <% }); %>
            
                <% if (!hasPayments) { %> 
                    <p><strong> You have no payment history yet.</strong></p>
                <% } %>
            </div>
            
            </div>
           </div>
        </div>
     </div>
  </div>
</section>
<!-- ============== Section1 End =============== -->

<%- include('common/footer') -%>

<style>
  .cancel-subscription-btn {
    background-color: #FCCB06;
    color: #000000;
    height: 70px; 
    width: 30%;
    border-radius: 6px;
    text-transform: capitalize;
    transition: 0.3s ease-in-out;
    border: none;
    cursor: not-allowed;
    padding: 14px 30px;
  }
  .cancel-refund-subscription-btn{
    background-color: #FCCB06;
    color: #000000;
    height: 70px; 
    width: 30%;
    border-radius: 6px;
    text-transform: capitalize;
    transition: 0.3s ease-in-out;
    border: none;
    cursor: not-allowed;
    padding: 14px 30px;
  }
  .update-subscription-btn{
    background-color: #FCCB06;
    color: #000000;
    height: 70px; 
    width: 30%;
    border-radius: 6px;
    text-transform: capitalize;
    transition: 0.3s ease-in-out;
    border: none;
    cursor: not-allowed;
    padding: 14px 30px;
  }


</style>

<script src="https://js.stripe.com/v3/"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script>
  var userId = '<%= userId %>';

  function confirmCancelSubscription() {
    Swal.fire({
        title: 'Are you sure?',
        text: 'Once cancelled, you will not be able to recover your subscription!',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, cancel it!',
        cancelButtonText: 'No, keep it'
    }).then((result) => {
        if (result.isConfirmed) {
            cancelSubscription(); 
        }
    });
}

  function cancelSubscription() {
    $.ajax({
        url: '/auth/cancelSubscription',
        method: 'POST',
        data: {
          userId: userId
        },
        success: function(response) {
            Swal.fire({
              icon: 'success',
              title: 'Cancelled Subscription!',
              text: 'Subscription cancelled successfully.',
              confirmButtonText: 'OK'
            })
        },
        error: function(error) {
            Swal.fire({
              icon: 'error',
              title: 'Cancel Subscription Error',
              text: response.error || 'Unknown error occurred.',
              confirmButtonText: 'OK'
              });
        }
    });
  }

  function confirmCancelRefundSubscription() {
    Swal.fire({
        title: 'Are you sure you want to cancel & refund?',
        text: 'Once cancelled, you will not be able to recover your subscription!',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, cancel it!',
        cancelButtonText: 'No, keep it'
    }).then((result) => {
        if (result.isConfirmed) {
            cancelandRefundSubscription(); 
        }
    });
}

  function cancelandRefundSubscription() {
    $.ajax({
        url: '/auth/cancelandRefundSubscriptionbyuser',
        method: 'POST',
        data: {
          userId: userId
        },
        success: function(response) {
            Swal.fire({
              icon: 'success',
              //title: 'Cancelled Subscription!',
              title: 'Refund request send to the admin successfully.',
              confirmButtonText: 'OK'
            })
        },
        error: function(error) {
            Swal.fire({
              icon: 'error',
              title: 'Subscription refund payment Error',
              text: response.error || 'Unknown error occurred.',
              confirmButtonText: 'OK'
            });
        }
    });
  }


</script>
