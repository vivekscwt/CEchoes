<!DOCTYPE html>
<!--
Author: Keenthemes
Product Name: Metronic - Bootstrap 5 HTML, VueJS, React, Angular & Laravel Admin Dashboard Theme
Purchase: https://1.envato.market/EA4JP
Website: http://www.keenthemes.com
Contact: support@keenthemes.com
Follow: www.twitter.com/keenthemes
Dribbble: www.dribbble.com/keenthemes
Like: www.facebook.com/keenthemes
License: For each use you must have a valid license purchased only from above link in order to legally use the theme for your project.
-->
<html lang="en">
<!--begin::Head-->

<head>
	<base href="../../../">
	<title>Metronic - the world's #1 selling Bootstrap Admin Theme Ecosystem for HTML, Vue, React, Angular &amp; Laravel
		by Keenthemes</title>
	<meta name="description"
		content="The most advanced Bootstrap Admin Theme on Themeforest trusted by 94,000 beginners and professionals. Multi-demo, Dark Mode, RTL support and complete React, Angular, Vue &amp; Laravel versions. Grab your copy now and get life-time updates for free." />
	<meta name="keywords"
		content="Metronic, bootstrap, bootstrap 5, Angular, VueJs, React, Laravel, admin themes, web design, figma, web development, free templates, free admin themes, bootstrap theme, bootstrap template, bootstrap dashboard, bootstrap dak mode, bootstrap button, bootstrap datepicker, bootstrap timepicker, fullcalendar, datatables, flaticon" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />
	<meta charset="utf-8" />
	<meta property="og:locale" content="en_US" />
	<meta property="og:type" content="article" />
	<meta property="og:title"
		content="Metronic - Bootstrap 5 HTML, VueJS, React, Angular &amp; Laravel Admin Dashboard Theme" />
	<meta property="og:url" content="https://keenthemes.com/metronic" />
	<meta property="og:site_name" content="Keenthemes | Metronic" />
	<link rel="canonical" href="Https://preview.keenthemes.com/metronic8" />
	<link rel="shortcut icon" href="assets/media/logos/favicon.ico" />
	<!--begin::Fonts-->
	<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700" />
	<!--end::Fonts-->
	<!--begin::Global Stylesheets Bundle(used by all pages)-->
	<link href="assets/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css" />
	<link href="assets/css/style.bundle.css" rel="stylesheet" type="text/css" />
	<!--end::Global Stylesheets Bundle-->
</head>
<!--end::Head-->
<!--begin::Body-->

<body id="kt_body" class="bg-dark">
	<!--begin::Main-->
	<div class="d-flex flex-column flex-root">
		<!--begin::Authentication - Sign-up -->
		<div class="d-flex flex-column flex-column-fluid bgi-position-y-bottom position-x-center bgi-no-repeat bgi-size-contain bgi-attachment-fixed"
			style="background-image: url(assets/media/illustrations/sketchy-1/14.png">
			<!--begin::Content-->
			<div class="d-flex flex-center flex-column flex-column-fluid p-10 pb-lg-20">
				<!--begin::Logo-->
				<a href="/" class="mb-12">
					<img alt="Logo" src="assets/media/logos/logo.png" class="h-80px" />
				</a>
				<!--end::Logo-->
				<!--begin::Wrapper-->
				<div class="w-lg-600px bg-body rounded shadow-sm p-10 p-lg-15 mx-auto">
					<!--begin::Form-->
					<form class="form w-100" novalidate="novalidate" id="kt_sign_up_form" action="/auth/register"
						method="POST">
						<!--begin::Heading-->
						<div class="mb-10 text-center">
							<!--begin::Title-->
							<h1 class="text-dark mb-3">Create an Account</h1>
							<!--end::Title-->
							<!--begin::Link-->
							<div class="text-gray-400 fw-bold fs-4">Already have an account?
								<a href="/sign-in" class="link-primary fw-bolder">Sign in here</a>
							</div>
							<!--end::Link-->
						</div>
						<!--end::Heading-->
						<!--begin::Action-->
						<!--<button type="button" class="btn btn-light-primary fw-bolder w-100 mb-10">
							<img alt="Logo" src="assets/media/svg/brand-logos/google-icon.svg" class="h-20px me-3" />Sign in with Google</button>-->
						<!--end::Action-->
						<!--begin::Separator-->
						<!--<div class="d-flex align-items-center mb-10">
								<div class="border-bottom border-gray-300 mw-50 w-100"></div>
								<span class="fw-bold text-gray-400 fs-7 mx-2">OR</span>
								<div class="border-bottom border-gray-300 mw-50 w-100"></div>
							</div>-->
						<!--end::Separator-->
						<!--begin::Input group-->
						<div class="row fv-row mb-7">
							<!--begin::Col-->
							<div class="col-xl-6">
								<label class="form-label fw-bolder text-dark fs-6">First Name</label>
								<input class="form-control form-control-lg form-control-solid" type="text"
									placeholder="" name="first_name" autocomplete="off" />
							</div>
							<!--end::Col-->
							<!--begin::Col-->
							<div class="col-xl-6">
								<label class="form-label fw-bolder text-dark fs-6">Last Name</label>
								<input class="form-control form-control-lg form-control-solid" type="text"
									placeholder="" name="last_name" autocomplete="off" />
							</div>
							<!--end::Col-->
						</div>
						<!--end::Input group-->
						<!--begin::Input group-->
						<div class="fv-row mb-7">
							<label class="form-label fw-bolder text-dark fs-6">Email</label>
							<input class="form-control form-control-lg form-control-solid" type="email" placeholder=""
								name="email" autocomplete="off" />
						</div>
						<!--end::Input group-->
						<!--begin::Input group-->
						<div class="fv-row mb-7">
							<label class="form-label fw-bolder text-dark fs-6">Phone</label>
							<input class="form-control form-control-lg form-control-solid" type="tel" placeholder=""
								name="phone" autocomplete="off" />
						</div>
						<!--end::Input group-->
						<!--begin::Input group-->
						<div class="mb-10 fv-row" data-kt-password-meter="true">
							<!--begin::Wrapper-->
							<div class="mb-1">
								<!--begin::Label-->
								<label class="form-label fw-bolder text-dark fs-6">Password</label>
								<!--end::Label-->
								<!--begin::Input wrapper-->
								<div class="position-relative mb-3">
									<input class="form-control form-control-lg form-control-solid" type="password"
										placeholder="" name="password" autocomplete="off" />
									<span
										class="btn btn-sm btn-icon position-absolute translate-middle top-50 end-0 me-n2"
										data-kt-password-meter-control="visibility">
										<i class="bi bi-eye-slash fs-2"></i>
										<i class="bi bi-eye fs-2 d-none"></i>
									</span>
								</div>
								<!--end::Input wrapper-->
								<!--begin::Meter-->
								<div class="d-flex align-items-center mb-3" data-kt-password-meter-control="highlight">
									<div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"></div>
									<div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"></div>
									<div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"></div>
									<div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px"></div>
								</div>
								<!--end::Meter-->
							</div>
							<!--end::Wrapper-->
							<!--begin::Hint-->
							<div class="text-muted">Use 8 or more characters with a mix of letters, numbers &amp;
								symbols.</div>
							<!--end::Hint-->
						</div>
						<!--end::Input group=-->
						<!--begin::Input group-->
						<div class="fv-row mb-5">
							<label class="form-label fw-bolder text-dark fs-6">Confirm Password</label>
							<input class="form-control form-control-lg form-control-solid" type="password"
								placeholder="" name="confirm_password" autocomplete="off" />
						</div>
						<!--end::Input group-->
						<!--begin::Input group-->
						<div class="fv-row mb-10">
							<label class="form-check form-check-custom form-check-solid form-check-inline">
								<input class="form-check-input" type="checkbox" name="toc" value="1" />
								<span class="form-check-label fw-bold text-gray-700 fs-6">I Agree
									<a href="#" class="ms-1 link-primary">Terms and conditions</a>.</span>
							</label>
						</div>
						<!--end::Input group-->
						<!--begin::Actions-->
						<div class="text-center">
							<button type="button" id="kt_sign_up_submit" class="btn btn-lg btn-primary">
								<span class="indicator-label">Submit</span>
								<span class="indicator-progress">Please wait...
									<span class="spinner-border spinner-border-sm align-middle ms-2"></span></span>
							</button>
						</div>
						<!--end::Actions-->
					</form>
					<%if (message) { %>
						<p>
							<%= message %>
						</p>
						<% } %>
							<!--end::Form-->
				</div>
				<!--end::Wrapper-->
			</div>
			<!--end::Content-->
			<!--begin::Footer-->
			<div class="d-flex flex-center flex-column-auto p-10">
				<!--begin::Links-->
				<div class="d-flex align-items-center fw-bold fs-6">
					<a href="https://keenthemes.com" class="text-muted text-hover-primary px-2">About</a>
					<a href="mailto:support@keenthemes.com" class="text-muted text-hover-primary px-2">Contact</a>
					<a href="https://1.envato.market/EA4JP" class="text-muted text-hover-primary px-2">Contact Us</a>
				</div>
				<!--end::Links-->
			</div>
			<!--end::Footer-->
		</div>
		<!--end::Authentication - Sign-up-->
	</div>
	<!--end::Main-->
	<!--begin::Javascript-->
	<!--begin::Global Javascript Bundle(used by all pages)-->
	<script src="assets/plugins/global/plugins.bundle.js"></script>
	<script src="assets/js/scripts.bundle.js"></script>
	<!--end::Global Javascript Bundle-->
	<!--begin::Page Custom Javascript(used by this page)-->
	<!--<script src="assets/js/custom/authentication/sign-up/general.js"></script>-->
	<!--end::Page Custom Javascript-->
	<!--end::Javascript-->
	<script>
		/******/ (() => { // webpackBootstrap
		/******/ 	"use strict";
			var __webpack_exports__ = {};
			/*!*******************************************************************************************!*\
			!*** ../../../themes/metronic/html/demo1/src/js/custom/authentication/sign-up/general.js ***!
			\*******************************************************************************************/


			// Class definition
			var KTSignupGeneral = function () {
				// Elements
				var form;
				var submitButton;
				var validator;
				var passwordMeter;

				// Handle form
				var handleForm = function (e) {
					// Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/
					validator = FormValidation.formValidation(
						form,
						{
							fields: {
								'first_name': {
									validators: {
										notEmpty: {
											message: 'First Name is required'
										}
									}
								},
								'last_name': {
									validators: {
										notEmpty: {
											message: 'Last Name is required'
										}
									}
								},
								'email': {
									validators: {
										notEmpty: {
											message: 'Email address is required'
										},
										emailAddress: {
											message: 'The value is not a valid email address'
										}
									}
								},
								'phone': {
									validators: {
										notEmpty: {
											message: 'Phone number is required'
										},
										regexp: {
											regexp: /^\d{10}$/, // Regular expression pattern for a 10-digit phone number
											message: 'The phone number is not valid'
										}
									}
								},
								'password': {
									validators: {
										notEmpty: {
											message: 'The password is required'
										},
										callback: {
											message: 'Please enter valid password',
											callback: function (input) {
												if (input.value.length > 0) {
													return validatePassword();
												}
											}
										}
									}
								},
								'confirm_password': {
									validators: {
										notEmpty: {
											message: 'The password confirmation is required'
										},
										identical: {
											compare: function () {
												return form.querySelector('[name="password"]').value;
											},
											message: 'The password and its confirm are not the same'
										}
									}
								},
								'toc': {
									validators: {
										notEmpty: {
											message: 'You must accept the terms and conditions'
										}
									}
								}
							},
							plugins: {
								trigger: new FormValidation.plugins.Trigger({
									event: {
										password: false
									}
								}),
								bootstrap: new FormValidation.plugins.Bootstrap5({
									rowSelector: '.fv-row',
									eleInvalidClass: '',
									eleValidClass: ''
								})
							}
						}
					);

					// Handle form submit
					submitButton.addEventListener('click', function (e) {
						e.preventDefault();

						validator.revalidateField('password');

						validator.validate().then(function (status) {
							if (status == 'Valid') {
								// Show loading indication
								submitButton.setAttribute('data-kt-indicator', 'on');

								// Disable button to avoid multiple click 
								submitButton.disabled = true;

								// Simulate ajax request
								setTimeout(function () {
									// Hide loading indication
									submitButton.removeAttribute('data-kt-indicator');

									// Enable button
									//submitButton.disabled = false;
									//form.submit()
									// Call Register Route Ajax
									const formData = $('#kt_sign_up_form').serializeArray();
									const jsonData = {};
									$(formData).each(function (index, field) {
										jsonData[field.name] = field.value;
									});
									console.log(jsonData);
									$.ajax({
										url: '/auth/register',
										method: 'POST',
										data: jsonData,
										ContentType: 'application/json',
										success: function (data) {
											if (data.status == 'ok') {
												Swal.fire({
													text: data.message,
													icon: "success",
													buttonsStyling: false,
													confirmButtonText: "Ok, got it!",
													customClass: {
														confirmButton: "btn btn-primary"
													}
												}).then(function (result) {
													if (result.isConfirmed) {
														location.reload(true);
													}
												});
												submitButton.disabled = false;
											} else {
												Swal.fire({
													text: data.message,
													icon: "error",
													buttonsStyling: false,
													confirmButtonText: "Ok, got it!",
													customClass: {
														confirmButton: "btn btn-primary"
													}
												});
												submitButton.disabled = false;
											}
										},
										error: function (error) {
											// Handle any errors
											Swal.fire({
												text: error,
												icon: "error",
												buttonsStyling: false,
												confirmButtonText: "Ok, got it!",
												customClass: {
													confirmButton: "btn btn-primary"
												}
											});
											submitButton.disabled = false;
										}
									});
									/*
									Swal.fire({
										text: "You have successfully reset your password!",
										icon: "success",
										buttonsStyling: false,
										confirmButtonText: "Ok, got it!",
										customClass: {
											confirmButton: "btn btn-primary"
										}
									}).then(function (result) {
										if (result.isConfirmed) { 
											form.reset();  // reset form                    
											passwordMeter.reset();  // reset password meter
											//form.submit();
										}
									});
									*/
								}, 1500);
							} else {
								// Show error popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/
								Swal.fire({
									text: "Sorry, looks like there are some errors detected, please try again.",
									icon: "error",
									buttonsStyling: false,
									confirmButtonText: "Ok, got it!",
									customClass: {
										confirmButton: "btn btn-primary"
									}
								});
							}
						});
					});

					// Handle password input
					form.querySelector('input[name="password"]').addEventListener('input', function () {
						if (this.value.length > 0) {
							validator.updateFieldStatus('password', 'NotValidated');
						}
					});
				}

				// Password input validation
				var validatePassword = function () {
					return (passwordMeter.getScore() === 100);
				}

				// Public functions
				return {
					// Initialization
					init: function () {
						// Elements
						form = document.querySelector('#kt_sign_up_form');
						submitButton = document.querySelector('#kt_sign_up_submit');
						passwordMeter = KTPasswordMeter.getInstance(form.querySelector('[data-kt-password-meter="true"]'));

						handleForm();
					}
				};
			}();

			// On document ready
			KTUtil.onDOMContentLoaded(function () {
				KTSignupGeneral.init();
			});

			/******/
		})()
			;
		//# sourceMappingURL=general.js.map
	</script>
</body>
<!--end::Body-->

</html>